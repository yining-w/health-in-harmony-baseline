theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
stat_summary(aes(y = Score, x = Rank, fun.y=mean, aes(group=1), geom="line", colour="blue")) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
stat_summary(aes(y = Score, x = Rank, fun.y=mean, geom="line", colour="blue")) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(tidyverse)
pairwise = read.csv('wikisurvey_results.csv')
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(RColorBrewer)
library(tidyverse)
pairwise = read.csv('wikisurvey_results.csv')
head(pairwise)
##create rank by theme
pairwise =
pairwise %>% group_by(Theme) %>%
mutate(group_rank = order(AOI_web_score, decreasing=TRUE))
pairwise = pairwise[
with(pairwise, order(Theme, group_rank, Ranking)),
]
##create a table for english
pairwise_eng = subset(pairwise, select = c(Theme,Idea_Text, Ranking, group_rank, AOI_web_score, total_matches))
##create a table for spanish
pairwise_spanish = subset(pairwise, select = c(Theme,Idea_ES, Ranking, group_rank, AOI_web_score, total_matches))
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
View(pairwise_eng)
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Ranking),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_eng) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_spanish) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(RColorBrewer)
library(tidyverse)
pairwise = read.csv('wikisurvey_results.csv')
head(pairwise)
##create rank by theme
pairwise =
pairwise %>% group_by(Theme) %>%
mutate(group_rank = order(AOI_web_score, decreasing=TRUE))
pairwise = pairwise[
with(pairwise, order(Theme, group_rank, Ranking)),
]
##create a table for english
pairwise_eng = subset(pairwise, select = c(Theme,Idea_Text, Ranking, group_rank, AOI_web_score, total_matches))
##create a table for spanish
pairwise_spanish = subset(pairwise, select = c(Theme,Idea_ES, Ranking, group_rank, AOI_web_score, total_matches))
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_eng) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_spanish) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_hline(aes(median(Score, Rank))) +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
?geom_hline
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score))) +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score)), line = "dashed", color= "maroon4") +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
devecon_stat = read.dta("DEVECON.dta")
install.packages("read.dta")
library(read.dta)
library(haven)
remove(list=ls())
devecon_stat = read.dta("DEVECON_fulldataset.dta")
devecon_stat = read_dta("DEVECON_fulldataset.dta")
View(devecon_stat)
devecon <- read.csv("DEVECON.csv") ##to use for actual data set
devecon_filter = devecon %>% filter(year >= 1988)
library(tidyverse)
devecon_filter = devecon %>% filter(year >= 1988)
## Clean up some stuff I want to use
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
## Clean up some stuff I want to use
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
devecon_filter <- devecon_filter %>% rename(WB_sl_agr_empl_zs = "agriculturalworkers")
devecon_filter <- devecon_filter %>% rename(WB_sl_ind_empl_zs = "manufacturers")
devecon_filter <- devecon_filter %>% rename(WB_sl_srv_empl_zs = "service")
devecon_filter <- devecon_filter %>% rename(EIU_AGRP = "gdpagric")
devecon_filter <- devecon_filter %>% rename(EIU_INDP = "gdpmanufacturing")
devecon_filter <- devecon_filter %>% rename(EIU_SERP = "gdpservice")
devecon_filter <- devecon_filter %>% mutate(agrproductivity = agriculturalworkers/gdpagric)
## Clean up some stuff I want to use
devecon_filter <- devecon %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc, WB_ny_gdp_pcap_kd_zg , WB_sp_pop_grow, WB_ny_gdp_mktp_kd_zg, WB_en_pop_dnst, WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
devecon_filter <- devecon_filter %>% mutate(lngdppc=log(WB_ny_gdp_pcap_kd))
## Clean up some stuff I want to use
devecon_filter <- devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc, WB_ny_gdp_pcap_kd_zg , WB_sp_pop_grow, WB_ny_gdp_mktp_kd_zg, WB_en_pop_dnst, WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
#WB_en_pop_dnst = "popdensity"
#WB_sl_agr_empl_zs = "agriculturalworkers"
#WB_sl_ind_empl_zs = "manufacturers"
#WB_sl_srv_empl_zs = "service"
#EIU_AGRP = "gdpagric"
#EIU_INDP = "gdpmanufacturing"
#EIU_SERP = "gdpservice"
devecon_filter <- devecon_filter %>% mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
devecon_filter <- devecon_filter%>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
devecon_filter <-
devecon_filter %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
View(devecon_filter)
?melt
library(melt)
library(reshape)
View(devecon_filter)
View(devecon_filter)
View(devecon_filter)
mmr_long <- melt(devecon_filter, id=c("countrycode", "regionname", "year"))
View(mmr_long)
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long <- melt(devecon_filter, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_emp_zs", "WB_sl_ind_emp_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_emp_zs", "WB_sl_ind_emp_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
mmr_long <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_empl_zs", "WB_sl_ind_empl_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
View(mmr_long)
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs))
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs))
mmr_long_share <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_gdp = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long_gdp <- melt(mmr_long_gdp, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_productivity = subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity = devecon_filter %.% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity <- melt(mmr_long_productivity, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_share %>%
filter(year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in India 2018")
mmr_long_share %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in India 2018")
mmr_long_share %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in Mynmar",
subtitle = "2000 and 2018")
mmr_long_gdp %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in Mynmar",
subtitle = "2000 and 2018")
mmr_long_gdp %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment GDP in Mynmar",
subtitle = "2000 and 2018")
mmr_long_productivity %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment GDP in Mynmar",
subtitle = "2000 and 2018")
mmr_long_productivity %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Productivity in Mynmar",
subtitle = "2000 and 2018")
library(reshape)
library(stargazer)
library(haven)
df = read_dta("voterfileNC.dta") ## to check variable definitions
df = read_dta("voterfileNC.dta") ## to check variable definitions
View(df)
melt(df, id= -c("voted2004","voted2006", "voted2008", "voted2010"))
lm(voted2006 ~ white, data =df)
library(shiny)
library(shinydashboard)
library(callr)
library(tidyverse)
library(leaflet)
library(tidyverse)
library(leaflet.extras)
library(shinyWidgets)
library(RColorBrewer)
library(rsconnect)
remove(list=ls())
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
library(shinythemes)
# Define UI for application that draws a histogram
ui <-dashboardPage(
skin = "black",
title = "Health in Harmony",
### HEADER
###NAVBAR
fluidPage(theme = shinytheme("united"),
navbarPage(collapsible = TRUE,
"Madagascar Baseline Survey Results", id="nav",
tabPanel("About Us",
div(class="outer",
fluidRow(
sidebarLayout(
sidebarPanel(
selectInput("location", "Facility",
choices = unique(confirmed_cases_copy$location)
)
),
mainPanel(column(3,
box(
width = NULL,
title = "YT Video Here",
HTML('<iframe width="560" height="315"
src="https://www.youtube.com/embed/ScMzIvxBSi4" frameborder="0" allow="accelerometer;
autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)),
)
))),
),
tabPanel("Survey Results",
div(class="outer"
)))))
# Define UI for application that draws a histogram
ui <-dashboardPage(
skin = "black",
title = "Health in Harmony",
### HEADER
###NAVBAR
fluidPage(theme = shinytheme("united"),
navbarPage(collapsible = TRUE,
"Madagascar Baseline Survey Results", id="nav",
tabPanel("About Us",
div(class="outer",
fluidRow(
sidebarLayout(
sidebarPanel(
#selectInput("location", "Facility",
#            choices = unique(confirmed_cases_copy$location)
)
),
mainPanel(column(3,
box(
width = NULL,
title = "YT Video Here",
HTML('<iframe width="560" height="315"
src="https://www.youtube.com/embed/ScMzIvxBSi4" frameborder="0" allow="accelerometer;
autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)),
)
))),
),
tabPanel("Survey Results",
div(class="outer"
)))))
# Define UI for application that draws a histogram
ui <-dashboardPage(
skin = "black",
title = "Health in Harmony",
### HEADER
###NAVBAR
fluidPage(theme = shinytheme("united"),
navbarPage(collapsible = TRUE,
"Madagascar Baseline Survey Results", id="nav",
tabPanel("About Us",
div(class="outer",
fluidRow(
sidebarLayout(
sidebarPanel(
#selectInput("location", "Facility",
#            choices = unique(confirmed_cases_copy$location)
)
),
mainPanel(column(3,
box(
width = NULL,
title = "YT Video Here",
HTML('<iframe width="560" height="315"
src="https://www.youtube.com/embed/ScMzIvxBSi4" frameborder="0" allow="accelerometer;
autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)),
)
)))
)))
# Define UI for application that draws a histogram
ui <-dashboardPage(
skin = "black",
title = "Health in Harmony",
### HEADER
###NAVBAR
fluidPage(theme = shinytheme("united"),
navbarPage(collapsible = TRUE,
"Madagascar Baseline Survey Results", id="nav",
tabPanel("About Us",
div(class="outer",
fluidRow(
sidebarLayout(
sidebarPanel(
#selectInput("location", "Facility",
#            choices = unique(confirmed_cases_copy$location)
)
),
mainPanel(column(3,
box(
width = NULL,
title = "YT Video Here",
HTML('<iframe width="560" height="315"
src="https://www.youtube.com/embed/ScMzIvxBSi4" frameborder="0" allow="accelerometer;
autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)),
)
)))
)))
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
library(rhandsontable)
install.packages("rhandsontable")
library(rhandsontable)
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
runApp('C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey')
setwd("C:/Users/yinin/Desktop/Health in Harmony/Baseline_Survey")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
