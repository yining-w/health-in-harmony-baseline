facet_wrap(~Theme) + theme_minimal() #+
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="Dark2") +
facet_wrap(~Theme) + theme_minimal() +
labs(title="All of the Ideas Visualized by Category")
library(RColorBrewer)
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="Dark2") +
facet_wrap(~Theme) + theme_minimal() +
labs(title="All of the Ideas Visualized by Category")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="Dark2") +
facet_wrap(~Theme) + theme_minimal() +
labs(title="All of the Ideas Visualized by Category")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="RdYlOr") +
facet_wrap(~Theme) + theme_minimal() +
labs(title="All of the Ideas Visualized by Category")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) + theme_minimal() +
labs(title="All of the Ideas Visualized by Category")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) + theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score, and the further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = Rank, y = Score)
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) + theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score, and the further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = Rank, y = Score)
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) + theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score, and the further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score,
and the further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score,
and the further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
geom_hline(yintercept=median(Score), linetype="dashed", color = "red")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
geom_hline(yintercept=median(Score), linetype="dashed", color = "red")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
geom_hline(yintercept=median("Score"), linetype="dashed", color = "red")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
geom_hline(median(Score), linetype="dashed", color = "red")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
geom_errorbar(stat = "hline", yintercept = "mean", width=0.6, color="black")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
stat_summary(fun.y=mean, aes(group=1), geom="line", colour="blue") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
stat_summary(aes(y = Score, x = Rank, fun.y=mean, aes(group=1), geom="line", colour="blue")) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
stat_summary(aes(y = Score, x = Rank, fun.y=mean, geom="line", colour="blue")) +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(tidyverse)
pairwise = read.csv('wikisurvey_results.csv')
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(RColorBrewer)
library(tidyverse)
pairwise = read.csv('wikisurvey_results.csv')
head(pairwise)
##create rank by theme
pairwise =
pairwise %>% group_by(Theme) %>%
mutate(group_rank = order(AOI_web_score, decreasing=TRUE))
pairwise = pairwise[
with(pairwise, order(Theme, group_rank, Ranking)),
]
##create a table for english
pairwise_eng = subset(pairwise, select = c(Theme,Idea_Text, Ranking, group_rank, AOI_web_score, total_matches))
##create a table for spanish
pairwise_spanish = subset(pairwise, select = c(Theme,Idea_ES, Ranking, group_rank, AOI_web_score, total_matches))
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
View(pairwise_eng)
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Ranking),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_eng) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_spanish) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(RColorBrewer)
library(tidyverse)
pairwise = read.csv('wikisurvey_results.csv')
head(pairwise)
##create rank by theme
pairwise =
pairwise %>% group_by(Theme) %>%
mutate(group_rank = order(AOI_web_score, decreasing=TRUE))
pairwise = pairwise[
with(pairwise, order(Theme, group_rank, Ranking)),
]
##create a table for english
pairwise_eng = subset(pairwise, select = c(Theme,Idea_Text, Ranking, group_rank, AOI_web_score, total_matches))
##create a table for spanish
pairwise_spanish = subset(pairwise, select = c(Theme,Idea_ES, Ranking, group_rank, AOI_web_score, total_matches))
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_eng) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_spanish) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_hline(aes(median(Score, Rank))) +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
?geom_hline
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score))) +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score)), line = "dashed", color= "maroon4") +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
devecon_stat = read.dta("DEVECON.dta")
install.packages("read.dta")
library(read.dta)
library(haven)
remove(list=ls())
devecon_stat = read.dta("DEVECON_fulldataset.dta")
devecon_stat = read_dta("DEVECON_fulldataset.dta")
View(devecon_stat)
devecon <- read.csv("DEVECON.csv") ##to use for actual data set
devecon_filter = devecon %>% filter(year >= 1988)
library(tidyverse)
devecon_filter = devecon %>% filter(year >= 1988)
## Clean up some stuff I want to use
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
## Clean up some stuff I want to use
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
devecon_filter <- devecon_filter %>% rename(WB_sl_agr_empl_zs = "agriculturalworkers")
devecon_filter <- devecon_filter %>% rename(WB_sl_ind_empl_zs = "manufacturers")
devecon_filter <- devecon_filter %>% rename(WB_sl_srv_empl_zs = "service")
devecon_filter <- devecon_filter %>% rename(EIU_AGRP = "gdpagric")
devecon_filter <- devecon_filter %>% rename(EIU_INDP = "gdpmanufacturing")
devecon_filter <- devecon_filter %>% rename(EIU_SERP = "gdpservice")
devecon_filter <- devecon_filter %>% mutate(agrproductivity = agriculturalworkers/gdpagric)
## Clean up some stuff I want to use
devecon_filter <- devecon %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc, WB_ny_gdp_pcap_kd_zg , WB_sp_pop_grow, WB_ny_gdp_mktp_kd_zg, WB_en_pop_dnst, WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
devecon_filter <- devecon_filter %>% mutate(lngdppc=log(WB_ny_gdp_pcap_kd))
## Clean up some stuff I want to use
devecon_filter <- devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc, WB_ny_gdp_pcap_kd_zg , WB_sp_pop_grow, WB_ny_gdp_mktp_kd_zg, WB_en_pop_dnst, WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
#WB_en_pop_dnst = "popdensity"
#WB_sl_agr_empl_zs = "agriculturalworkers"
#WB_sl_ind_empl_zs = "manufacturers"
#WB_sl_srv_empl_zs = "service"
#EIU_AGRP = "gdpagric"
#EIU_INDP = "gdpmanufacturing"
#EIU_SERP = "gdpservice"
devecon_filter <- devecon_filter %>% mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
devecon_filter <- devecon_filter%>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
devecon_filter <-
devecon_filter %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
View(devecon_filter)
?melt
library(melt)
library(reshape)
View(devecon_filter)
View(devecon_filter)
View(devecon_filter)
mmr_long <- melt(devecon_filter, id=c("countrycode", "regionname", "year"))
View(mmr_long)
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long <- melt(devecon_filter, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_emp_zs", "WB_sl_ind_emp_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_emp_zs", "WB_sl_ind_emp_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
mmr_long <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_empl_zs", "WB_sl_ind_empl_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
View(mmr_long)
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs))
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs))
mmr_long_share <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_gdp = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long_gdp <- melt(mmr_long_gdp, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_productivity = subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity = devecon_filter %.% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity <- melt(mmr_long_productivity, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_share %>%
filter(year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in India 2018")
mmr_long_share %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in India 2018")
mmr_long_share %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in Mynmar",
subtitle = "2000 and 2018")
mmr_long_gdp %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in Mynmar",
subtitle = "2000 and 2018")
mmr_long_gdp %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment GDP in Mynmar",
subtitle = "2000 and 2018")
mmr_long_productivity %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment GDP in Mynmar",
subtitle = "2000 and 2018")
mmr_long_productivity %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Productivity in Mynmar",
subtitle = "2000 and 2018")
library(reshape)
library(stargazer)
library(haven)
df = read_dta("voterfileNC.dta") ## to check variable definitions
df = read_dta("voterfileNC.dta") ## to check variable definitions
View(df)
melt(df, id= -c("voted2004","voted2006", "voted2008", "voted2010"))
lm(voted2006 ~ white, data =df)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/MENAGE.RData")
rm(list=ls())
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/MENAGE.RData")
View(menage)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/TABLEAU_DE_MENAGE.RData")
View(tableau_de_menage)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/MOUSTIQUAIRE.RData")
View(moustiquaire)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/GPS.RData")
View(menage)
View(menage)
View(gps)
View(moustiquaire)
View(menage)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/HISTORIQUE_NAISSANCE.RData")
View(historique_naissance)
View(tableau_de_menage)
View(historique_naissance)
shiny::runApp('C:/Users/yinin/Desktop/Health in Harmony/map_madagascar')
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app.R")
remove(list=ls())
#load(here("Baseline_Survey/data/gps.RData"))
#load(here("Baseline_Survey/preprocessing/menage_survey.csv"))
#load(here("Baseline_Survey/preprocessing/moustiquaire_survey.csv"))
setwd("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/preprocessing")
data_folder = "~/GitHub/health-in-harmony-baseline-/Baseline_Survey/data"
load(paste0(data_folder, "/gps.RData"))
moustiquaire = read.csv("moustiquaire_survey.csv")
moustiquaire = moustiquaire %>% select(-n)
menage = read.csv("menage_survey.csv")
survey = rbind(menage, moustiquaire)
#Transform GPS data into vector data
gps<-st_as_sf(x=gps,
crs="+proj=longlat +datum=WGS84 +no_defs",
coords=c("gpslon", "gpslat")) %>%
rename(village_code = gps1,
village_name = gps1a,
reserve_section = gpstrate)
library(shiny)
library(shinydashboard)
library(callr)
library(tidyverse)
library(leaflet)
library(tidyverse)
library(leaflet.extras)
library(viridis)
library(shinyWidgets)
library(shinythemes)
library(rhandsontable)
library(RColorBrewer)
library(shinycssloaders)
library(here)
#Loading coordinates #############################################################
library(sf)
data_folder = "~/GitHub/health-in-harmony-baseline-/Baseline_Survey/data"
load(paste0(data_folder, "/gps.RData"))
moustiquaire = read.csv("moustiquaire_survey.csv")
moustiquaire = moustiquaire %>% select(-n)
menage = read.csv("menage_survey.csv")
survey = rbind(menage, moustiquaire)
#Transform GPS data into vector data
gps<-st_as_sf(x=gps,
crs="+proj=longlat +datum=WGS84 +no_defs",
coords=c("gpslon", "gpslat")) %>%
rename(village_code = gps1,
village_name = gps1a,
reserve_section = gpstrate)
gps = gps %>% rename(
hh_village_code = village_code
)
###merging lat long with survey information
merge = survey %>% left_join(gps)
View(merge)
merge<-st_as_sf(x=merge,
crs="+proj=longlat +datum=WGS84 +no_defs",
coords=c("gpslon", "gpslat")) %>%
rename(village_code = gps1,
village_name = gps1a,
reserve_section = gpstrate)
merge<-st_as_sf(x=merge,
crs="+proj=longlat +datum=WGS84 +no_defs",
coords=c("gpslon", "gpslat"))
merge<-st_as_sf(x=merge,
crs="+proj=longlat +datum=WGS84 +no_defs",
coords=c("gpslon", "gpslat"))
View(merge)
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
