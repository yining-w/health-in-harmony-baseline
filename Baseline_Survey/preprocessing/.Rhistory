colnames(pairwise_eng) = c("Theme", "Idea", "Rank", "Group_Rank", "Score", "Total Matches")
kbl(pairwise_spanish) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
pairwise_eng %>%
ggplot() +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_hline(aes(median(Score, Rank))) +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
?geom_hline
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score))) +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
pairwise_eng %>%
ggplot() +
geom_hline(aes(yintercept=median(Score)), line = "dashed", color= "maroon4") +
geom_point(aes(y = Score, x=Rank),color="maroon4") +
facet_wrap(~Theme) +
theme_minimal() +
labs(title="All of the Ideas Visualized by Category",
subtitle = "Each dot represents an idea. The higher the dot, the higher its score/
The further right the dot the higher its rank. The horizontal line indicates the median score.",
caption = "The People's Budget Chicago",
x = "Rank", y = "Score")
devecon_stat = read.dta("DEVECON.dta")
install.packages("read.dta")
library(read.dta)
library(haven)
remove(list=ls())
devecon_stat = read.dta("DEVECON_fulldataset.dta")
devecon_stat = read_dta("DEVECON_fulldataset.dta")
View(devecon_stat)
devecon <- read.csv("DEVECON.csv") ##to use for actual data set
devecon_filter = devecon %>% filter(year >= 1988)
library(tidyverse)
devecon_filter = devecon %>% filter(year >= 1988)
## Clean up some stuff I want to use
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
## Clean up some stuff I want to use
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
devecon_filter <- devecon_filter %>% rename(WB_sl_agr_empl_zs = "agriculturalworkers")
devecon_filter <- devecon_filter %>% rename(WB_sl_ind_empl_zs = "manufacturers")
devecon_filter <- devecon_filter %>% rename(WB_sl_srv_empl_zs = "service")
devecon_filter <- devecon_filter %>% rename(EIU_AGRP = "gdpagric")
devecon_filter <- devecon_filter %>% rename(EIU_INDP = "gdpmanufacturing")
devecon_filter <- devecon_filter %>% rename(EIU_SERP = "gdpservice")
devecon_filter <- devecon_filter %>% mutate(agrproductivity = agriculturalworkers/gdpagric)
## Clean up some stuff I want to use
devecon_filter <- devecon %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc, WB_ny_gdp_pcap_kd_zg , WB_sp_pop_grow, WB_ny_gdp_mktp_kd_zg, WB_en_pop_dnst, WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
devecon_filter <- devecon_filter %>% mutate(lngdppc=log(WB_ny_gdp_pcap_kd))
## Clean up some stuff I want to use
devecon_filter <- devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc, WB_ny_gdp_pcap_kd_zg , WB_sp_pop_grow, WB_ny_gdp_mktp_kd_zg, WB_en_pop_dnst, WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
devecon_filter <- devecon_filter  %>% rename(WB_en_pop_dnst = "popdensity")
#WB_en_pop_dnst = "popdensity"
#WB_sl_agr_empl_zs = "agriculturalworkers"
#WB_sl_ind_empl_zs = "manufacturers"
#WB_sl_srv_empl_zs = "service"
#EIU_AGRP = "gdpagric"
#EIU_INDP = "gdpmanufacturing"
#EIU_SERP = "gdpservice"
devecon_filter <- devecon_filter %>% mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
devecon_filter <- devecon_filter%>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
devecon_filter <-
devecon_filter %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
View(devecon_filter)
?melt
library(melt)
library(reshape)
View(devecon_filter)
View(devecon_filter)
View(devecon_filter)
mmr_long <- melt(devecon_filter, id=c("countrycode", "regionname", "year"))
View(mmr_long)
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long <- melt(devecon_filter, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_emp_zs", "WB_sl_ind_emp_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_emp_zs", "WB_sl_ind_emp_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
mmr_long <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc", "WB_sl_agr_empl_zs", "WB_sl_ind_empl_zs",
"WB_sl_srv_empl_zs", "EIU_AGRP", "EIU_INDP", "EIU_SERP"))
View(mmr_long)
##pivot tables
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs,EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long <-
mmr_long %>%
mutate(agrproductivity = WB_sl_agr_empl_zs/EIU_AGRP)
mmr_long <-
mmr_long %>%
mutate(manufactureproductivity = WB_sl_ind_empl_zs/EIU_INDP)
mmr_long <-
mmr_long %>%
mutate(serviceproductivity = WB_sl_srv_empl_zs/EIU_SERP)
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs))
mmr_long = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  WB_sl_agr_empl_zs , WB_sl_ind_empl_zs , WB_sl_srv_empl_zs))
mmr_long_share <- melt(mmr_long, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_gdp = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,  EIU_AGRP,EIU_INDP, EIU_SERP))
mmr_long_gdp <- melt(mmr_long_gdp, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_productivity = subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity = devecon_filter %.% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity = devecon_filter %>% subset.data.frame(select = c(countrycode, regionname, year, lngdppc,
agrproductivity, manufactureproductivity,
serviceproductivity))
mmr_long_productivity <- melt(mmr_long_productivity, id=c("countrycode", "regionname", "year",
"lngdppc"))
mmr_long_share %>%
filter(year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in India 2018")
mmr_long_share %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in India 2018")
mmr_long_share %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in Mynmar",
subtitle = "2000 and 2018")
mmr_long_gdp %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Distribution in Mynmar",
subtitle = "2000 and 2018")
mmr_long_gdp %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment GDP in Mynmar",
subtitle = "2000 and 2018")
mmr_long_productivity %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment GDP in Mynmar",
subtitle = "2000 and 2018")
mmr_long_productivity %>%
filter(year == 2000 & countrycode == "MMR" | year == 2018 & countrycode == "MMR") %>%
ggplot(aes(fill=variable, y=value, x=year)) +
geom_bar(position="dodge", stat="identity") + labs(title = "Employment Productivity in Mynmar",
subtitle = "2000 and 2018")
library(reshape)
library(stargazer)
library(haven)
df = read_dta("voterfileNC.dta") ## to check variable definitions
df = read_dta("voterfileNC.dta") ## to check variable definitions
View(df)
melt(df, id= -c("voted2004","voted2006", "voted2008", "voted2010"))
lm(voted2006 ~ white, data =df)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/MENAGE.RData")
rm(list=ls())
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/MENAGE.RData")
View(menage)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/TABLEAU_DE_MENAGE.RData")
View(tableau_de_menage)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/MOUSTIQUAIRE.RData")
View(moustiquaire)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/GPS.RData")
View(menage)
View(menage)
View(gps)
View(moustiquaire)
View(menage)
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/drive-download-20201211T182603Z-001/HISTORIQUE_NAISSANCE.RData")
View(historique_naissance)
View(tableau_de_menage)
View(historique_naissance)
shiny::runApp('C:/Users/yinin/Desktop/Health in Harmony/map_madagascar')
load("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app.R")
library(shiny)
library(shinydashboard)
library(callr)
library(tidyverse)
library(leaflet)
library(tidyverse)
library(leaflet.extras)
library(viridis)
library(shinyWidgets)
library(shinythemes)
library(rhandsontable)
library(RColorBrewer)
#library(shinycssloaders)
#library(here)
remove(list=ls())
#Loading coordinates #############################################################
library(sf)
#load(here("Baseline_Survey/data/gps.RData"))
#load(here("Baseline_Survey/preprocessing/menage_survey.csv"))
#load(here("Baseline_Survey/preprocessing/moustiquaire_survey.csv"))
setwd("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/preprocessing")
#load(here("Baseline_Survey/data/gps.RData"))
#load(here("Baseline_Survey/preprocessing/menage_survey.csv"))
#load(here("Baseline_Survey/preprocessing/moustiquaire_survey.csv"))
#setwd("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/preprocessing")
data_folder = "~/GitHub/health-in-harmony-baseline-/Baseline_Survey/data"
load(paste0(data_folder, "/gps.RData"))
moustiquaire = read.csv("moustiquaire_survey.csv")
moustiquaire = moustiquaire %>% select(-n)
menage = read.csv("menage_survey.csv")
survey = rbind(menage, moustiquaire)
#Transform GPS data into vector data
gps<-st_as_sf(x=gps,
crs="+proj=longlat +datum=WGS84 +no_defs",
coords=c("gpslon", "gpslat")) %>%
rename(village_code = gps1,
village_name = gps1a,
reserve_section = gpstrate)
gps = gps %>% rename(
hh_village_code = village_code
)
###merging lat long with survey information
merge = survey %>% left_join(gps)
##### Map Set up ######
wardpal <- colorFactor(palette ='PuBuGn', domain=gps$gpstrate)
View(gps)
#library(shinycssloaders)
#library(here)
remove(list=ls())
#Loading coordinates #############################################################
#load(here("Baseline_Survey/data/gps.RData"))
#load(here("Baseline_Survey/preprocessing/menage_survey.csv"))
#load(here("Baseline_Survey/preprocessing/moustiquaire_survey.csv"))
#setwd("~/GitHub/health-in-harmony-baseline-/Baseline_Survey/preprocessing")
data_folder = "~/GitHub/health-in-harmony-baseline-/Baseline_Survey/data"
load(paste0(data_folder, "/gps.RData"))
moustiquaire = read.csv("moustiquaire_survey.csv")
moustiquaire = moustiquaire %>% select(-n)
menage = read.csv("menage_survey.csv")
View(gps)
gps = gps %>% rename(
hh_village_code = gps1,
village_name = gps1a,
reserve_section = gpstrate,
lat = gpslat,
long = gpslon)
###merging lat long with survey information
merge = survey %>% left_join(gps)
survey = rbind(menage, moustiquaire)
###merging lat long with survey information
merge = survey %>% left_join(gps)
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
library(shinycssloaders)
# Define UI ####################################################################
ui <-navbarPage(
theme=shinytheme("journal"),
title = div(img(src="https://pbs.twimg.com/profile_images/1319346219714424833/9J3Uetn6_400x400.jpg", style="margin-top: -14px; padding-right:10px;padding-bottom:10px", height = 60)),
id = "main",
#TAB ABOUT US
tabPanel("About Us",
div(class = "outer",
style = "display::inline-block;vertical-align:top;",
br(),
h4("MISSION"),
p("To Reverse Tropical Rainforest Deforestation for planetary health."),
h4("VISION"),
p("Healthy people. Healthy forests. Healthy planet"),
h4("MANOBO"),
p("In 2019, with rainforest communities, local nonprofits, and renowned conservation organizations,
we launched programs in the Manombo Special Reserve, a 14,300-acre protected area in southeast Madagascar.
The reserve is home to nine species of lemur, all of which are endemic to Madagascar and threatened by extinction.
We address the challenges of access to high-quality healthcare, resilient and adaptable farming techniques,
and, most urgently, hunger, allowing communities to live in balance with this precious rainforest."
),
#Youtube video
absolutePanel(right = 100,
top = 70,
column(7,
box(
width = NULL,
title = "Saving Lives by Saving Trees: Kinari Webb | TEDxRainier",
HTML('<iframe width="560" height="315" src="https://www.youtube.com/watch?reload=9&v=tJkeZ_4wuYg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
)
),
# Logo on the bottom
absolutePanel(id = "logo",
class = "card",
bottom = 30,
right = 50,
width= 20,
fixed=TRUE,
draggable = FALSE,
height = 20,
tags$a(href='https://www.healthinharmony.org',
img(src='https://pbs.twimg.com/profile_images/1319346219714424833/9J3Uetn6_400x400.jpg',
height='40',
width='40')
)
),
)
),
#MAP TAB
tabPanel("Baseline Survey Results",
div(class = "outer",
tags$head(
includeCSS("Baseline_Survey/styles.css")
),
leafletOutput("map", width = "100%", height = "100%"),
#Filter panel
absolutePanel(
id = "controls", class = "panel panel-default", fixed = TRUE,
draggable = TRUE, top = 70, left = "8%", #125
right = "auto", bottom = "auto",
width = 0, height = 0,
dropdownButton(
label = "",
icon = icon("gear"),
status = "primary",
circle = TRUE,
width = 250,
h4("Geography"),
checkboxGroupInput(inputId="stratum",
label="Stratum",
choices=levels(merge$reserve_section),
selected=c("PARCELLE I",
"FORET CLASSEE",
"PARCELLE II/LITTORALE")
),
hr(),
h4("Survey"),
selectizeInput(inputId="Survey",
label="Survey",
choices=c("choose" = "", levels(merge$survey))),
selectizeInput(inputId="Topic",
label="Topic",
choices=c("choose" = "", levels(merge$topic))),
selectizeInput(inputId="Question",
label="Question",
choices=c("choose" = "", levels(merge$Question)))
)
),
#Plot panel
absolutePanel(
id = "hist_panel",
class = "panel panel-default",
fixed = TRUE,
draggable = TRUE,
top = 70,
left = "auto",
right = 0,
bottom = "auto",
width = "27%", height = "auto", #430
h3("Use the gear icon to select map parameters"),
h4(tags$em("Click on a village for further details")),
uiOutput("clear_district", align = "center"),
uiOutput("district_result"),
htmlOutput("all_india_text"),
h5(strong("Given Parameters, Distribution of Districts with Respect to:")),
plotOutput("myhist", height = 120) #%>%
#    withSpinner(type = spinner_type, color = spinner_color),
#h5(strong("Trend over Time for the Same Parameters:")),
#plotOutput("line_plot", height = plot_height) %>%
#    withSpinner(type = spinner_type, color = spinner_color)
)
)),
tabPanel("Get Involved",
div(class = "Outer",
br(),
h4(a("Join us",
href = "https://healthinharmony.org/get-involved/"),
"to protect forests, people, and the planet today.  Everyone has something to give to create a healthy future for all."
),
br(),
p("For general inquiries, email info@healthinharmony.org, or call 503 688-5579")
)
)
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
css_folder = "~/GitHub/health-in-harmony-baseline-/Baseline_Survey/"
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
View(merge)
View(moustiquaire)
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
View(merge)
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
View(menage)
View(merge)
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
View(merge)
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
runApp('~/GitHub/health-in-harmony-baseline-/Baseline_Survey/app report')
