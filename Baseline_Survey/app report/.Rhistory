library(shiny); runApp('app4.R')
library(shiny); runApp('app4.R')
rlang::last_error()
library(shiny)
library(shinydashboard)
library(callr)
library(tidyverse)
library(leaflet)
library(tidyverse)
library(leaflet.extras)
library(viridis)
library(shinyWidgets)
library(shinythemes)
library(rhandsontable)
library(RColorBrewer)
library(sf)
library(shinycssloaders)
library(here)
# Loading coordinates ---------------------------------------------------------------------
load(here("Baseline_Survey/data/gps.RData"))
#Transform GPS data into vector data
gps<-st_as_sf(x=gps,
crs="+proj=longlat +datum=WGS84 +no_defs",
coords=c("gpslon", "gpslat")) %>%
rename(village_code = gps1,
village_name = gps1a,
reserve_section = gpstrate)
gps = gps %>% rename(
hh_village_code = village_code
)
# Adding population (size of the circle) --------------------------------------------------
load(here("Baseline_Survey/data/MENAGE.RData"))
population <- menage %>% select(village_code = hh1,
reserve_section = hhstrate,
household_members = hh48) %>%
group_by(village_code, reserve_section) %>%
summarise(population = sum(household_members, na.rm = TRUE)) %>%
select(village_code, population)
gps <- gps %>% left_join(population, by = c("hh_village_code" = "village_code"))
# Reading Survey Data ---------------------------------------------------------------------
num_df <- list.files(path = here("Baseline_Survey/preprocessing"),
pattern = "*num.rds$",
full.names = TRUE) %>%
map_dfr(readRDS) %>% ungroup()
cat_df <- list.files(path = here("Baseline_Survey/preprocessing"),
pattern = "*cat.rds$",
full.names = TRUE) %>%
map_dfr(readRDS) %>% ungroup()
# Setting question options ---------------------------------------------------------------
questions <- rbind((num_df %>% select(topic, question) %>% mutate(type = "numeric")),
(cat_df %>% select(topic, question) %>% mutate(type = "categorical"))) %>%
unique()
topic_options <- questions %>% pull(topic)
type_options <- ""
question_options <- ""
runApp('app4.R')
